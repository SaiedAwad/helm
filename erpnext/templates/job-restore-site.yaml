{{- if .Values.jobs.restore.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.jobs.restore.jobName | default (printf "%s-restore-site-%s" (include "erpnext.fullname" .) (now | date "20060102150405")) }}
  labels:
    {{- include "erpnext.labels" . | nindent 4 }}
spec:
  backoffLimit: {{ .Values.jobs.restore.backoffLimit }}
  template:
    spec:
      serviceAccountName: {{ template "erpnext.serviceAccountName" $ }}
      restartPolicy: Never
      initContainers:
        - name: rclone-job
          image: "{{ .Values.jobs.restore.image.repository }}:{{ .Values.jobs.restore.image.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -x;
              rm -rf /opt/backup/2* && \
              rclone copy {{ .Values.jobs.restore.providerName }}:{{ .Values.jobs.restore.bucketName }}/{{ .Values.jobs.restore.version }}/{{ .Values.jobs.restore.serverName }}/{{ .Values.jobs.restore.bench }}/{{ .Values.jobs.restore.prodSiteName }}/{{ .Values.jobs.restore.type }}/{{ .Values.jobs.restore.fileName }} /opt/backup/ --log-level DEBUG --log-file=/tmp/rclone-log.txt && \
              ls /opt/backup
          volumeMounts:
            - name: backup
              mountPath: /opt/backup
            - name: sites-dir
              mountPath: /home/frappe/frappe-bench/sites
            - name: logs
              mountPath: /home/frappe/frappe-bench/logs
      containers:
        - name: restore
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["bash", "-c"]
          args:
            - |
              set -x;
              cd /home/frappe/frappe-bench/sites/backup/ &&
              ls &&
              file="{{ .Values.jobs.restore.fileName }}";
              gzip -d "/home/frappe/frappe-bench/sites/backup/$file" &&
              uncompressed="${file%.gz}";
              echo "Uncompressed file name: $uncompressed";
              ls;
              sed 's/\sDEFINER=`[^`]*`@`[^`]*`//g' -i /home/frappe/frappe-bench/sites/backup/$uncompressed;
              bench --site "{{ .Values.jobs.restore.siteName }}" --force restore "/home/frappe/frappe-bench/sites/backup/$uncompressed" --db-root-password {{ .Values.jobs.restore.dbRootPassword }};
              bench --site "{{ .Values.jobs.restore.siteName }}" migrate;
              bench --site "{{ .Values.jobs.restore.siteName }}" enable-scheduler;
              bench --site "{{ .Values.jobs.restore.siteName }}" execute whitelabel.cleanup.cleanup;
              bench --site "{{ .Values.jobs.restore.siteName }}" execute nixpend_healthcare.patches.v14_10_0.create_procedure.execute;
              rm -rf "/home/frappe/frappe-bench/sites/backup/$uncompressed";
              bench --site "{{ .Values.jobs.restore.siteName }}" migrate;
          volumeMounts:
            - name: backup
              mountPath: /home/frappe/frappe-bench/sites/backup
            - name: sites-dir
              mountPath: /home/frappe/frappe-bench/sites
            - name: logs
              mountPath: /home/frappe/frappe-bench/logs
      volumes:
        - name: backup
          emptyDir: {}
        - name: sites-dir
          {{- if .Values.persistence.worker.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.worker.existingClaim | default (include "erpnext.fullname" .) }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: logs
          {{- if .Values.persistence.logs.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.logs.existingClaim | default (printf "%s-logs" (include "erpnext.fullname" .)) }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}